#############################################################################
# Makefile for building: newHW4
# Generated by qmake (2.01a) (Qt 4.6.2) on: Sun Apr 22 13:22:45 2012
# Project:  newHW4.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile newHW4.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = Arrow.cpp \
		Bullet.cpp \
		Enemy.cpp \
		Enemy2.cpp \
		Enemy3.cpp \
		HoldtheLine.cpp \
		main.cpp \
		Protagonist.cpp \
		Protect.cpp \
		ProtectItem.cpp \
		Quiver.cpp \
		SeekerBullet.cpp \
		Trap.cpp \
		trapBag.cpp \
		Tree.cpp moc_HoldtheLine.cpp
OBJECTS       = Arrow.o \
		Bullet.o \
		Enemy.o \
		Enemy2.o \
		Enemy3.o \
		HoldtheLine.o \
		main.o \
		Protagonist.o \
		Protect.o \
		ProtectItem.o \
		Quiver.o \
		SeekerBullet.o \
		Trap.o \
		trapBag.o \
		Tree.o \
		moc_HoldtheLine.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		newHW4.pro
QMAKE_TARGET  = newHW4
DESTDIR       = 
TARGET        = newHW4

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: newHW4.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile newHW4.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile newHW4.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/newHW41.0.0 || $(MKDIR) .tmp/newHW41.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/newHW41.0.0/ && $(COPY_FILE) --parents Ammunition.h Arrow.h Bullet.h Enemy.h Enemy2.h Enemy3.h EnemyBullet.h EnemyObject.h HoldtheLine.h Protagonist.h Protect.h ProtectItem.h Quiver.h SeekerBullet.h Trap.h trapBag.h Tree.h .tmp/newHW41.0.0/ && $(COPY_FILE) --parents Arrow.cpp Bullet.cpp Enemy.cpp Enemy2.cpp Enemy3.cpp HoldtheLine.cpp main.cpp Protagonist.cpp Protect.cpp ProtectItem.cpp Quiver.cpp SeekerBullet.cpp Trap.cpp trapBag.cpp Tree.cpp .tmp/newHW41.0.0/ && (cd `dirname .tmp/newHW41.0.0` && $(TAR) newHW41.0.0.tar newHW41.0.0 && $(COMPRESS) newHW41.0.0.tar) && $(MOVE) `dirname .tmp/newHW41.0.0`/newHW41.0.0.tar.gz . && $(DEL_FILE) -r .tmp/newHW41.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_HoldtheLine.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_HoldtheLine.cpp
moc_HoldtheLine.cpp: Protagonist.h \
		Enemy.h \
		EnemyObject.h \
		Enemy2.h \
		Enemy3.h \
		Arrow.h \
		Quiver.h \
		Ammunition.h \
		Trap.h \
		trapBag.h \
		Tree.h \
		Bullet.h \
		EnemyBullet.h \
		SeekerBullet.h \
		Protect.h \
		ProtectItem.h \
		HoldtheLine.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) HoldtheLine.h -o moc_HoldtheLine.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

Arrow.o: Arrow.cpp Arrow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Arrow.o Arrow.cpp

Bullet.o: Bullet.cpp Bullet.h \
		EnemyBullet.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Bullet.o Bullet.cpp

Enemy.o: Enemy.cpp Enemy.h \
		EnemyObject.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Enemy.o Enemy.cpp

Enemy2.o: Enemy2.cpp Enemy2.h \
		EnemyObject.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Enemy2.o Enemy2.cpp

Enemy3.o: Enemy3.cpp Enemy3.h \
		EnemyObject.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Enemy3.o Enemy3.cpp

HoldtheLine.o: HoldtheLine.cpp HoldtheLine.h \
		Protagonist.h \
		Enemy.h \
		EnemyObject.h \
		Enemy2.h \
		Enemy3.h \
		Arrow.h \
		Quiver.h \
		Ammunition.h \
		Trap.h \
		trapBag.h \
		Tree.h \
		Bullet.h \
		EnemyBullet.h \
		SeekerBullet.h \
		Protect.h \
		ProtectItem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o HoldtheLine.o HoldtheLine.cpp

main.o: main.cpp HoldtheLine.h \
		Protagonist.h \
		Enemy.h \
		EnemyObject.h \
		Enemy2.h \
		Enemy3.h \
		Arrow.h \
		Quiver.h \
		Ammunition.h \
		Trap.h \
		trapBag.h \
		Tree.h \
		Bullet.h \
		EnemyBullet.h \
		SeekerBullet.h \
		Protect.h \
		ProtectItem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

Protagonist.o: Protagonist.cpp Protagonist.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Protagonist.o Protagonist.cpp

Protect.o: Protect.cpp Protect.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Protect.o Protect.cpp

ProtectItem.o: ProtectItem.cpp ProtectItem.h \
		Ammunition.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ProtectItem.o ProtectItem.cpp

Quiver.o: Quiver.cpp Quiver.h \
		Ammunition.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Quiver.o Quiver.cpp

SeekerBullet.o: SeekerBullet.cpp SeekerBullet.h \
		EnemyBullet.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SeekerBullet.o SeekerBullet.cpp

Trap.o: Trap.cpp Trap.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Trap.o Trap.cpp

trapBag.o: trapBag.cpp trapBag.h \
		Ammunition.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o trapBag.o trapBag.cpp

Tree.o: Tree.cpp Tree.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Tree.o Tree.cpp

moc_HoldtheLine.o: moc_HoldtheLine.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_HoldtheLine.o moc_HoldtheLine.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

